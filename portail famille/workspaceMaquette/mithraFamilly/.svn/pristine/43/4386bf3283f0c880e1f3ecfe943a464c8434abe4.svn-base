/**
 * 
 */
package com.sonovision.openconv.db.cir;

import java.io.Serializable;
import java.util.HashMap;

import org.springframework.context.annotation.Scope;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.stereotype.Component;
import org.springframework.web.context.WebApplicationContext;
import org.w3c.dom.Node;

import com.sonovision.openconv.db.vo.common.Common;
import com.sonovision.openconv.modules.xslprocess.model.CirTypeKey;

@Component("TotalCirTable")
@Scope(value = WebApplicationContext.SCOPE_SESSION)
public class TotalCirTable{
	
    private HashMap<Enum, HashMap<String,SessionStockageRes>> table;


    public TotalCirTable(){
    	table= new HashMap<>();
    	for(CirTypeKey cirType:CirTypeKey.values()){
    		table.put(cirType, new HashMap<>());
    	}
    }
    
	public HashMap<Enum, HashMap<String, SessionStockageRes>> getTable() {
		return table;
	}

	public void setTable(HashMap<Enum, HashMap<String, SessionStockageRes>> table) {
		this.table = table;
	}


	public String add(CirTypeKey typeKey, String key1, String key2, Node dataXml){
    	return add(typeKey,typeKey.getKey(key1, key2),dataXml);
    }
    
   //add if not exists
   public String add(CirTypeKey typeKey, String resKey, Node dataXml){
	   HashMap<String,SessionStockageRes> resTable=table.get(typeKey);
	   SessionStockageRes value=resTable.putIfAbsent(resKey, new SessionStockageRes(resKey,dataXml));
	   return resKey;
   }

}
